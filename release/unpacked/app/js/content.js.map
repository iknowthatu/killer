{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App/index.js","webpack:///./src/ImageReplacer/MonsterComparator/index.js","webpack:///./src/ImageReplacer/ReplacerTool/index.js","webpack:///./src/ImageReplacer/index.js","webpack:///./src/Killer/Alarm/index.js","webpack:///./src/Killer/CatcherHeart/index.js","webpack:///./src/Killer/CommonHeart/index.js","webpack:///./src/Killer/CookieMaker/index.js","webpack:///./src/Killer/HealerHeart/index.js","webpack:///./src/Killer/Inject/RequestsHook.js","webpack:///./src/Killer/Inject/TKeyGetter.js","webpack:///./src/Killer/KillerHeart/index.js","webpack:///./src/Killer/MainContainer/index.js","webpack:///./src/Killer/SettingsContainer/index.js","webpack:///./src/Killer/TravellerHeart/index.js","webpack:///./src/Killer/TravellerTentacle/index.js","webpack:///./src/Killer/index.js","webpack:///./src/index.js","webpack:///./src/styles/styles.css"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAiD;AAChB;;AAEjC;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,sDAAe;AACtC;AACA,qBAAqB,+CAAM;AAC3B;AACA;AACA;;AAEe,wEAAS,EAAC;;;;;;;;;;;;;;;AChBzB;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,KAAK,EAAE,OAAO;AAC5B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC,gCAAgC,OAAO;AACvC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,EAAE;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,aAAa,cAAc;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,cAAc,GAAG,KAAK;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,iDAAiD;AAC/F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kEAAkE,EAAE;AACpE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC,cAAc,GAAG,YAAY;AAC9D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6CAA6C,aAAa;AAC1D;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,wFAAyB,E;;;;;;;;;;;;ACtSxC;AAAA;AAAgD;;AAEhD;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,0DAAU;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,6EAA6E;AAC7E;AACA;AACA;;AAEA,gBAAgB;;AAEhB,kDAAkD,2BAA2B,EAAE;AAC/E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,gFAAiB,EAAC;;;;;;;;;;;;;;ACtEjC;AAAA;AAAoC;AACrB,oHAAM,E;;;;;;;;;;;;ACDrB;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,oEAAK,E;;;;;;;;;;;;ACzDpB;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC,0BAA0B,aAAa,iBAAiB;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qEAAqE;AACrE;;AAEA;AACA,+DAA+D;;AAE/D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sCAAsC,QAAQ,GAAG,QAAQ;AACzD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA,yGAAyG;AACzG;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,kCAAkC,iBAAiB;AACnD,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,UAAU;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,uCAAuC,qBAAqB;AAC5D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wDAAwD,EAAE;AACnF;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,qBAAqB;AACnD;AACA;AACA;AACA,mDAAmD;AACnD,uEAAuE,sBAAsB,GAAG,IAAI;AACpG;AACA;;AAEA;;AAEe,2EAAY,E;;;;;;;;;;;;AC1b3B;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;;AAEA;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,WAAW;AACtD;AACA;AACA,wCAAwC,aAAa;AACrD,OAAO;AACP;;AAEA;AACA;AACA,kDAAkD;AAClD,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC;AACpC;AACA;AACA;AACA,uCAAuC;AACvC;AACA,4BAA4B;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEe,0EAAW,E;;;;;;;;;;;;AC/F1B;AAAA;AACA;AACA;AACA;AACA,aAAa,8BAA8B,qCAAqC;AAChF;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,0EAAW,E;;;;;;;;;;;;ACvC1B;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB;AACzB;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;;AAEL,kCAAkC;AAClC;;AAEA;;AAEe,0EAAW,E;;;;;;;;;;;;ACxG1B;AAAA;AAAA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,gCAAgC;AAC1E;;AAEA;AACA;AACA,KAAK;AACL,qEAAqE,WAAW;AAChF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;;;AAGA,CAAC,IAAI;;AAEU;AACf;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACnFA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,yCAAyC,KAAK;AAC9C;AACA;AACA,E;;;;;;;;;;;;ACrBA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;;AAEA,qBAAqB;;AAErB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;;AAEA;AACA;AACA,iDAAiD;AACjD,uDAAuD;AACvD,wDAAwD;;AAExD;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,2BAA2B;AAC3B,aAAa;AACb;;AAEA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA,8DAA8D,qCAAqC;AACnG;;AAEA;AACA,8DAA8D,sCAAsC;AACpG;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,8DAA8D,oCAAoC;AAClG;;AAEA;AACA;AACA,oEAAoE,KAAK;AACzE;AACA,gFAAgF;AAChF;;AAEA;;AAEA,yBAAyB;AACzB;AACA;;AAEA;;AAEe,0EAAW,E;;;;;;;;;;;;ACjS1B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA,yCAAyC,QAAQ;AACjD,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,8EAAe,E;;;;;;;;;;;;AC1H9B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA,uCAAuC,QAAQ;AAC/C,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,gFAAiB,E;;;;;;;;;;;;AClJhC;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yBAAyB;AACzB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,eAAe,oBAAoB,gBAAgB;AAClF,yBAAyB,6BAA6B;;AAEtD;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,qCAAqC,oFAAoF;AACzH;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,oBAAoB;;AAEpD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B;AAC5B;AACA,sBAAsB;AACtB,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC,aAAa;AACjD,8BAA8B,aAAa;AAC3C;;AAEA,8BAA8B,eAAe;AAC7C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,+BAA+B;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,6EAAc,E;;;;;;;;;;;;AC9G7B;AAAA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B;AAC5B;AACA,sBAAsB;AACtB,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC,aAAa;AACjD,8BAA8B,aAAa;AAC3C;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,+BAA+B;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,gFAAiB,E;;;;;;;;;;;;AC1EhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACN;AACA;AACA;AACE;AACI;AACM;AACL;AACK;AACF;AACV;AACZ;;AAE5B;;AAEA;AACA;AACA;AACA;AACA,IAAI,oEAAe;AACnB;AACA;;AAEA;AACA,qBAAqB,+CAAK;AAC1B;AACA;AACA;AACA,yBAAyB,sDAAe;AACxC,2BAA2B,0DAAY;;AAEvC,0BAA0B,oDAAW;AACrC,0BAA0B,oDAAW;AACrC,0BAA0B,oDAAW;AACrC,2BAA2B,qDAAY;AACvC,6BAA6B,uDAAc;AAC3C,gCAAgC,0DAAiB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,+BAA+B;AACzD;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA,0BAA0B;AAC1B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;;AAEA,qCAAqC;AACrC,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,UAAU;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,UAAU;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,UAAU;AACjF;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mCAAmC;AAC9D,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,qEAAM,E;;;;;;;;;;;;AC5SrB;AAAA;AAAA,mBAAO,CAAC,oDAAqB;;AAEL;;AAExB,cAAc,4CAAG;;;;;;;;;;;;ACJjB,iBAAiB,qBAAuB,6B","file":"./dist/app/js/content.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import PokemonReplacer from './../ImageReplacer';\r\nimport Killer from './../Killer';\r\n\r\nclass KillerApp {\r\n  constructor() {\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    let replacer = new PokemonReplacer();\r\n    console.info('Image replacer was loaded');\r\n    let killer = new Killer(replacer);\r\n\t\tconsole.info('Killer was loaded');\r\n  }\r\n}\r\n\r\nexport default KillerApp;\r\n\r\n\r\n","class League17MonsterComparator {\n\tconstructor() {\n      this.init();\n  }\n\n  /**\n   *\n   * @param {Object} params\n   * @param {string} params.pokemonsDataSrc\n   */\n  init(params = {}) {\n      // this.normalHost = 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/';\n      this.normalHost = 'https://www.serebii.net/sunmoon/pokemon/';\n      this.shineHost = 'https://www.serebii.net/Shiny/SM/';\n      this.pokemons = [];\n      this.pokemonsDataSrc = params.pokemonsDataSrc || 'data/pokemons.json';\n\n      this.loadPokemonsData(this.pokemonsDataSrc);\n  }\n\n  loadPokemonsData(pokemonsDataSrc) {\n    return fetch(chrome.runtime.getURL(pokemonsDataSrc))\n    .then( response=>response.json() )\n    .then( data=>this.pokemons=data );\n  }\n\n  getOldGoodPokemonImageSrc( number, isShine=false ) {\n    let host = isShine ? this.shineHost : this.normalHost;\n    return `${host}${number}.png`;\n  }\n\n  getPokemonNameByNumber( number ) {\n    let pokemonFromData = this.pokemons.filter(pok=>pok.number==number)[0];\n    if( !pokemonFromData ) return `i don't know this pokemon`;\n    return pokemonFromData.name;\n  }\n\n  getPokemonNumberString( number=0 ) {\n    if(number < 10) return `00${number}`;\n    if(number < 100) return `0${number}`;\n    if(number > 806) return 0;\n    return number;\n  }\n\n    /* inline pokemons */\n\n  getInlinePokemons() {\n    let inlinePokemons = document.querySelectorAll( '.intextpoke:not([data-changed])' );\n    return inlinePokemons;\n  }\n\n  getInlinePokemonNumber( inlinePokemon ) {\n    let stringWithNumber = inlinePokemon.getAttribute('onclick');\n    stringWithNumber = stringWithNumber ? stringWithNumber : '';\n    stringWithNumber = stringWithNumber.replace(/^.*?'/, '').replace(/'.*/,'');\n    let number = stringWithNumber.match( /\\d+/ );\n    number = number != null ? this.getPokemonNumberString(+number[0]) : 0;\n    return number;\n  }\n\n  isShineInlinePokemon( inlinePokemon ) {\n    let stringWithIsShineInfo = inlinePokemon.getAttribute('onclick');\n    let isShine = stringWithIsShineInfo.match( /\\d[^\\d]*?\\)/ )[0];\n    isShine = isShine.match(/\\d/);\n    isShine = isShine != null && isShine[0] == 1;\n    return isShine;\n  }\n\n  changeInlinePokemonImage( inlinePokemon, number, isShine=false ) {\n    let image = this.makeOldGoodPokemonImage( number, isShine );\n    let oldImage = inlinePokemon.querySelector( '.pk' );\n    if( oldImage) oldImage.style.display = 'none';\n    let lastChild = inlinePokemon.lastChild;\n    if( !lastChild ) inlinePokemon.appendChild(image);\n    else inlinePokemon.insertBefore(image, lastChild);\n    image.classList.add('pk');\n    image.style.maxHeight = \"2rem\";\n  }\n\n  changeInlinePokemonName( inlinePokemon, number ) {\n    let name = this.getPokemonNameByNumber( number );\n    let oldNameNode = inlinePokemon.lastChild;\n    oldNameNode.textContent = name;\n  }\n\n  changeInlinePokemonItemNameAndImage( inlinePokemon ) {\n    let number = this.getInlinePokemonNumber( inlinePokemon );\n    if( !number ) return;\n    let isShine = this.isShineInlinePokemon( inlinePokemon );\n    this.changeInlinePokemonImage( inlinePokemon, number, isShine );\n    this.changeInlinePokemonName( inlinePokemon, number );\n    inlinePokemon.setAttribute( 'data-changed', '' );\n  }\n\n  changeInlinePokemonsNamesAndImages( inlinePokemons ) {\n    inlinePokemons.forEach( inlinePokemon=>{\n      this.changeInlinePokemonItemNameAndImage( inlinePokemon );\n    });\n  }\n\n  changeInlinePokemons() {\n    let inlinePokemons = this.getInlinePokemons();\n    this.changeInlinePokemonsNamesAndImages( inlinePokemons );\n  }\n\n    /* tiny Cards */\n\n  findAllTinyCards() {\n    let tinyCards = document.querySelectorAll( '.pokemonBoxTiny:not([data-changed])' );\n    return tinyCards;\n  }\n\n  getTinyCardNumber( tinyCard ) {\n    let oldImage = tinyCard.querySelector('.image');\n    if(!oldImage) return;\n    let number = oldImage.src.match( /\\d{3}/ );\n    number = number ? this.getPokemonNumberString(+number[0]) : 0;\n    return number;\n  }\n\n  insertImageInTinyCard( tinyCard, image ) {\n    image.classList.add('image');\n    let oldImage = tinyCard.querySelector('.image');\n    if(!oldImage) return;\n    oldImage.style.display = 'none';\n    let parentOldImage = oldImage.parentNode;\n    parentOldImage.insertBefore( image, oldImage );\n    if(!image.parentNode.classList.contains('pokemonBoxTiny'))\n    image.style = 'margin-top: 0; width: 100%; height: 100%;';\n  }\n\n  changeNameInTinyCard( tinyCard , pokemonNumber ) {\n    let name = this.getPokemonNameByNumber( pokemonNumber );\n    let nameDiv = tinyCard.querySelector('.name');\n    if(!nameDiv) return;\n    nameDiv = Array.from(nameDiv.childNodes).find(child => child.nodeType == 3 && child.textContent.match(/#\\d+/));\n    nameDiv.textContent = `#${pokemonNumber} ${name}`;\n  }\n\n  isTinyCardShine( tinyCard ) {\n    let image = tinyCard.querySelector('.image');\n    let isShine = image.src.match(/shine/);\n    isShine = isShine != null;\n    return isShine;\n  }\n\n  changeTinyCardsImagesAndNames( tinyCards ) {\n    tinyCards.forEach( tinyCard=>{\n      let pokemonNumber = this.getTinyCardNumber(tinyCard);\n      if( !pokemonNumber ) return;\n      let isShine = this.isTinyCardShine( tinyCard );\n      let image = this.makeOldGoodPokemonImage( pokemonNumber, isShine );\n      this.insertImageInTinyCard( tinyCard, image );\n      this.changeNameInTinyCard( tinyCard, pokemonNumber );\n      tinyCard.setAttribute('data-changed','');\n    });\n  }\n\n  changeTinyCards() {\n    let tinyCards = this.findAllTinyCards();\n    this.changeTinyCardsImagesAndNames( tinyCards );\n  }\n\n    /* pokemon Cards */\n\n  isPokemonInCardShine( pokemonCard ) {\n    let pokemonImage = pokemonCard.querySelector('.image > img');\n    if( !pokemonImage ) return false;\n    let isShine = pokemonImage.src.match( /shine/ );\n    isShine = isShine != null;\n\t\treturn isShine;\n  }\n\n\tgetPokemonNumberForCards( pokemonBoxCard ) {\n    let pokemonImage = pokemonBoxCard.querySelector('.image > img');\n    if( !pokemonImage ) return 0;\n    let number = pokemonImage.src.match(/\\d{3}/);\n    number = number ? this.getPokemonNumberString(+number[0]) : 0;\n\t\treturn number;\n  }\n\n  findAllPokemonsInCards() {\n\t\tlet pokemons = document.querySelectorAll('.pokemonBoxCard:not([data-changed])');\n\t\treturn pokemons;\n\t}\n\n\tmakeOldGoodPokemonImage( number, isShine=false ) {\n\t\tlet image = new Image();\n\t\timage.src = this.getOldGoodPokemonImageSrc( number, isShine );\n\t\timage.classList.add( 'leagueHelper__pokemon-image' );\n\t\treturn image;\n\t}\n\n\tinsertOldGoodPokemonImageForCards( pokemonBoxCard, pokemonImage ) {\n    let pokemonImageDiv = pokemonBoxCard.querySelector('.image');\n    if(!pokemonImageDiv) return;\n\t\tpokemonImageDiv.appendChild( pokemonImage );\n\t}\n\n\thideOldNonameImageForCards( pokemonBoxCard ) {\n    let pokemonImage = pokemonBoxCard.querySelector('.image > img');\n    if(!pokemonImage) return;\n\t\tpokemonImage.style.display = 'none';\n  }\n\n  changePokemonNameInCard( pokemonCard, name ) {\n    let title = pokemonCard.querySelector('.title > .name');\n    if(!title) return;\n    title.innerHTML = name;\n    if( pokemonCard.getAttribute('data-nameWatcher') != null  ) return;\n    pokemonCard.addEventListener('click',()=>{if(title.innerHTML != name)title.innerHTML=name;});\n    pokemonCard.setAttribute('data-nameWatcher','');\n  }\n\n\tshowRealPokemonsForCards( pokemonsCards ) {\n\t\tpokemonsCards.forEach( pokemonCard => {\n      let pokNumber = this.getPokemonNumberForCards( pokemonCard );\n      if( !pokNumber ) return;\n      if( !Number.isInteger( +pokNumber ) ) return;\n      if( this.isComparasionAlreadyDidForCards(pokemonCard) ) return;\n      let isShine = this.isPokemonInCardShine( pokemonCard );\n      let image = this.makeOldGoodPokemonImage( pokNumber, isShine );\n      this.hideOldNonameImageForCards( pokemonCard );\n      this.insertOldGoodPokemonImageForCards( pokemonCard, image );\n      let pokemonName = this.getPokemonNameByNumber( pokNumber );\n      this.changePokemonNameInCard( pokemonCard, pokemonName );\n      pokemonCard.setAttribute('data-changed','');\n\t\t});\n  }\n\n\tisComparasionAlreadyDidForCards( pokemonBoxCard ) {\n\t\tlet pokemonImages = pokemonBoxCard.querySelectorAll('.image > img');\n\t\tif( pokemonImages.length > 1 ) return true;\n\t\treturn false;\n  }\n\n  changeAllPokemonCards() {\n    let pokemonsCards = this.findAllPokemonsInCards();\n    this.showRealPokemonsForCards( pokemonsCards );\n  }\n\n    /* search in pokedex */\n\n  findPokemonInPokedex() {\n    let divWithImage = document.querySelector( '#divPokedex .imagebox' );\n    if( divWithImage == null ) return null;\n    if ( divWithImage.getAttribute( 'data-changed' ) != null ) return null;\n    return divWithImage;\n  }\n\n  getPokemonNumberInPokedex( pokemonImageBox ) {\n    let number = pokemonImageBox.style.backgroundImage.match( /\\d{3}/ );\n    number = number ? this.getPokemonNumberString(+number[0]) : 0;\n    return number;\n  }\n\n  changePokedexTitle( pokemonNumber ) {\n    let pokedexTitle = document.querySelector( '#divPokedex .params > .title' );\n    if( pokedexTitle == null ) return;\n    let pokemonName = this.getPokemonNameByNumber(pokemonNumber);\n    pokedexTitle.innerHTML = `#${pokemonNumber} ${pokemonName}`;\n  }\n\n  isShineInPokedex( divWithImage ) {\n    let isShine = divWithImage.style.backgroundImage.match( /shine/ );\n    isShine = isShine != null;\n    return isShine;\n  }\n\n  changePokedex() {\n    let imageDiv = this.findPokemonInPokedex();\n    if( imageDiv == null ) return;\n\n    let pokemonNumber = this.getPokemonNumberInPokedex( imageDiv );\n    if(!pokemonNumber) return;\n    let isShine = this.isShineInPokedex( imageDiv );\n    let realImageUrl = this.getOldGoodPokemonImageSrc( pokemonNumber, isShine );\n    imageDiv.style.backgroundImage = `url(\"${realImageUrl}\")`;\n    imageDiv.style.backgroundSize = `100% 100%`;\n    imageDiv.setAttribute( 'data-changed', '' );\n\n    this.changePokedexTitle( pokemonNumber );\n  }\n\n    /* main func */\n\n\tcompare() {\n    this.changeAllPokemonCards();\n    this.changeTinyCards();\n    this.changeInlinePokemons();\n    this.changePokedex();\n\t}\n}\n\nexport default League17MonsterComparator;","import Comparator from './../MonsterComparator';\r\n\r\nclass League17HelperApp {\r\n    constructor() {\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.comparator = new Comparator();\r\n    this.setDocumentObserver();\r\n\t}\r\n\r\n  setDocumentObserver() {\r\n    let observer = new MutationObserver( (mut)=>{\r\n      if( !this.isMainDivsLoaded() ) return;\r\n      observer.disconnect();\r\n\t\t\tthis.setObservers();\r\n     });\r\n    let config = { attributes: true, childList: true, subtree: true };\r\n    observer.observe( document, config );\r\n  }\r\n\r\n  switchOn(value) {\r\n    if(!value) return this.stopObservers();\r\n    this.setObservers();\r\n  }\r\n\r\n  isMainDivsLoaded() {\r\n    let myPokemonDiv = document.querySelector('#divFightI');\r\n\t\tlet enemyPokemonDiv = document.querySelector('#divFightH');\r\n\t\tlet myPokeTeam = document.querySelector('#divDockMenu > .divDockPanels');\r\n\t\tlet pokeCards = document.querySelector('#divPokeCard');\r\n    let pokedex = document.querySelector('#divPokedex');\r\n    let farm = document.querySelector('.divDialog');\r\n\r\n    let allMainDivsLoaded = myPokemonDiv && enemyPokemonDiv && myPokeTeam && pokeCards\r\n      pokeCards && pokedex && farm;\r\n    return allMainDivsLoaded;\r\n  }\r\n\r\n\tsetObservers() {\r\n    if(this.observer) return;\r\n\r\n\t\tlet myPokemonDiv = document.querySelector( '#divFightI' );\r\n\t\tlet enemyPokemonDiv = document.querySelector( '#divFightH' );\r\n\t\tlet myPokeTeam = document.querySelector( '#divDockMenu > .divDockPanels' ); // .divPokeTeam\r\n\t\tlet pokeCards = document.querySelector( '#divPokeCard' );\r\n    let pokedex = document.querySelector( '#divPokedex' );\r\n    let farm = document.querySelector( '.divDialog' );\r\n\r\n\t\tlet config = { attributes: true, childList: true, subtree: true };\r\n\r\n    let observer = new MutationObserver(  (mut)=>{ this.comparator.compare(); } );\r\n    this.observer = observer;\r\n\r\n\t\tobserver.observe( myPokemonDiv, config );\r\n\t\tobserver.observe( enemyPokemonDiv, config );\r\n\t\tobserver.observe( myPokeTeam, config );\r\n\t\tobserver.observe( pokeCards, config );\r\n    observer.observe( pokedex, config );\r\n    observer.observe( farm, config );\r\n  }\r\n\r\n  stopObservers() {\r\n    if(!this.observer) return;\r\n    this.observer.disconnect();\r\n    this.observer = undefined;\r\n  }\r\n}\r\n\r\nexport default League17HelperApp;\r\n\r\n","import Helper from './ReplacerTool';\r\nexport default Helper;","class Alarm {\r\n  constructor() {\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.preloadAlarm();\r\n    this.defaultSrc = chrome.runtime.getURL('audio/signal.ogx');\r\n  }\r\n\r\n  preloadAlarm() {\r\n    let alarmAudio = document.createElement('audio');\r\n      alarmAudio.classList.add('killer__alarm');\r\n      alarmAudio.loop = true;\r\n      alarmAudio.volume = 0.1;\r\n    let alarmSource = document.createElement('source');\r\n      alarmSource.src = this.defaultSrc;\r\n      alarmAudio.appendChild(alarmSource);\r\n    this.alarmAudio = alarmAudio;\r\n    this.alarmSource = alarmSource;\r\n  }\r\n\r\n  changeVolume(value) {\r\n    if(isNaN(+value)) return;\r\n    if(+value < 1 && +value > 0) {\r\n      this.alarmAudio.volume = value;\r\n      return;\r\n    }\r\n    if(+value <= 0) {\r\n      this.alarmAudio.volume = 0;\r\n      return;\r\n    }\r\n    if(+value >= 100) {\r\n      this.alarmAudio.volume = 1;\r\n      return;\r\n    }\r\n    this.alarmAudio.volume = (+value)/100;\r\n  }\r\n\r\n  changeMelody(src) {\r\n    if(!src.trim()) {\r\n      this.alarmAudio.src = this.defaultSrc;\r\n      return;\r\n    }\r\n    this.alarmAudio.src = src;\r\n  }\r\n\r\n  startPlay() {\r\n    this.alarmAudio.play();\r\n  }\r\n\r\n  stopPlay() {\r\n    this.alarmAudio.pause();\r\n    this.alarmAudio.currentTime = 0;\r\n  }\r\n}\r\n\r\nexport default Alarm;","let allBaseHPpoks = [0,78,60,80,39,58,78,44,59,79,45,50,60,40,45,65,40,63,83,30,55,40,65,35,60,35,60,50,75,55,70,90,46,61,81,70,95,38,73,115,140,40,75,45,60,75,35,60,60,70,10,35,40,65,50,80,40,65,55,90,40,65,90,25,40,55,70,80,90,50,65,80,40,80,40,55,80,50,65,90,95,25,50,52,35,60,65,90,80,105,30,50,30,45,60,35,60,85,30,55,40,60,60,95,50,60,50,50,90,40,65,80,105,250,65,105,30,55,45,80,30,60,40,70,65,65,65,65,75,20,95,130,48,55,130,65,65,65,35,70,30,60,80,160,90,90,90,41,61,91,106,100,45,60,80,39,58,78,50,65,85,35,85,60,100,40,55,40,70,85,75,125,20,50,90,35,55,40,65,55,70,90,75,70,100,70,90,35,55,75,55,30,75,65,55,95,65,95,60,95,60,48,190,70,50,75,100,65,75,60,90,65,70,20,80,55,60,90,40,50,50,100,55,35,75,45,65,65,45,75,75,90,90,85,73,55,35,50,45,45,45,95,255,90,115,100,50,70,100,106,106,100,40,50,70,45,60,80,50,70,100,35,70,38,78,45,50,60,50,60,40,60,80,40,70,90,40,60,40,60,28,38,68,40,70,60,60,60,80,150,31,61,1,64,84,104,72,144,50,30,50,70,50,50,50,60,70,30,60,40,70,60,60,65,65,50,70,100,45,70,130,170,60,70,70,60,80,60,45,50,80,50,70,45,75,73,73,70,70,50,110,43,63,40,60,66,86,45,75,20,95,70,60,44,64,20,40,99,65,65,95,50,80,70,90,110,35,55,55,100,43,45,65,95,40,60,80,80,80,80,80,80,100,100,105,100,50,55,75,95,44,64,76,53,64,84,40,55,85,59,79,37,77,45,60,80,40,60,97,97,30,60,40,60,70,30,70,60,55,85,45,70,76,111,75,90,150,55,65,60,100,49,71,45,63,103,57,67,50,20,100,76,50,58,68,108,135,40,70,68,108,40,70,48,83,74,49,69,45,60,90,70,70,110,115,100,75,75,85,86,65,65,75,110,85,68,60,45,70,50,75,80,75,100,90,91,110,150,120,80,100,70,100,120,100,45,60,75,65,90,110,55,75,95,45,60,45,65,85,41,64,50,75,50,75,50,75,76,116,50,62,80,45,75,55,70,85,55,67,60,110,103,75,85,105,50,75,105,120,75,45,55,75,30,40,60,40,60,45,70,70,50,60,95,70,105,75,50,70,50,65,72,38,58,54,74,55,75,50,80,40,60,55,75,45,60,70,45,65,110,62,75,36,51,71,60,80,55,50,70,69,114,55,100,165,50,70,44,74,40,60,60,35,65,85,55,75,50,60,60,46,66,76,55,95,70,50,80,109,45,65,77,59,89,45,65,95,70,100,70,110,85,58,52,72,92,55,85,91,91,91,79,79,100,100,89,125,91,100,71,56,61,88,40,59,75,41,54,72,38,85,45,62,78,38,45,80,62,86,44,54,78,66,123,67,95,75,62,74,45,59,60,78,101,62,82,53,86,42,72,50,65,50,71,44,62,58,82,77,123,95,78,67,50,45,68,90,57,43,85,49,65,55,95,40,85,126,126,108,50,80,80];\n//console.log(allBaseHPpoks.length);\n\nclass CatcherHeart {\n  constructor() {\n    this.init();\n  }\n\n  init() {\n    this.settings = {};\n    this.nextPulse = this.nextPulse.bind(this);\n    this.setSettings = this.setSettings.bind(this);\n    this.timeBetweenActions = 1000;\n  }\n\n  nextPulse(params={}) {\n    let newParams = {...params};\n\n    /* it should restrict disappearing of wild pokemon with time */\n    if(params.waitingForCatchCounter > 30) {\n      if(!this.isDivContextLoaded()) {\n        this.clickPokeballOnDivFightI();\n      } else this.changePokemonFromDivContext();\n    }\n\n    if(!params.needCatch || !this.settings.autocatch) return newParams;\n\n    if(!this.isPokemonShouldBeCaughtAutomatically()) return newParams;\n\n    let catchParams = {};\n    if(!params.catchParams) {\n      newParams.catchParams = catchParams;\n    } else {\n      catchParams = params.catchParams;\n    }\n\n    newParams.waitingForCatchCounter = 0;\n    //console.log(catchParams.phase);\n    //console.log(catchParams);\n\n    if(!catchParams.phase) {\n      let preparings = this.catchPreparing();\n      if(!preparings) {\n        //this.clickPokeballOnDivFightI();\n        //catchParams.phase = 9; //??\n        console.log('i cant catch with this parameters')\n        return newParams;\n      } else {\n        this.openTeamDiv();\n        catchParams.phase = 1;\n        catchParams.pokemonId = preparings.id;\n        catchParams.specialAttackNumber = preparings.specialAttackNumber - 1;\n        catchParams.waitAttackNumber = preparings.waitAttackNumber - 1;\n        catchParams.allowedPokeballs = preparings.allowedPokeballs;\n        return newParams;\n      }\n    }\n\n    if(catchParams.phase == 1) {\n      let teamLoaded = this.isTeamOpenedAndLoaded();\n      if(!teamLoaded) return newParams;\n      let pokemonExist = this.findPokemonAndClickTheBallById(catchParams.pokemonId);\n      if(!pokemonExist) {\n        catchParams.phase = 9; //?\n        return newParams;\n      } else {\n        let pokemonSended = this.sendPokemonInBattle();\n        if(!pokemonSended) return newParams;\n        catchParams.phase = 2;\n        return newParams;\n      }\n    };\n\n    if(catchParams.phase == 2) {\n      let specialAttackClicked = this.doSpecialAttack(catchParams.specialAttackNumber);\n      //this.settings.killerHeart.clickAttack(catchParams.specialAttackNumber);\n      if(!specialAttackClicked) return newParams;\n\n      catchParams.phase = 3;\n      return newParams;\n    }\n\n    if(catchParams.phase == 3) {\n      let enemyPreparedToCatch = this.isEnemyHpMinimal();\n      if(enemyPreparedToCatch) {\n        this.clickPokeballOnDivFightI();\n        catchParams.phase = 5;\n        return newParams;\n      }\n\n      let enemyHp = this.settings.killerHeart.getEnemyHPpercents();\n      if(enemyHp != catchParams.enemyLastHP) catchParams.enemyLastHP = enemyHp;\n      else {\n        catchParams.idleCounter = catchParams.idleCounter ? catchParams.idleCounter + 1 : 1;\n      }\n\n      if(catchParams.idleCounter > 4) {\n        catchParams.phase = 2;\n        return newParams;\n      }\n\n      if(catchParams.waitAttackNumber >= 0 && catchParams.waitAttackNumber <= 3) {\n        let waitAttackClicked = this.doAttackForWaiting(catchParams.waitAttackNumber)\n        //this.settings.killerHeart.clickAttack(catchParams.waitAttackNumber);\n        if(!waitAttackClicked) catchParams.waitAttackNumber = -1;\n        return newParams;\n      }\n\n      this.clickPokeballOnDivFightI();\n      catchParams.phase = 4;\n      return newParams;\n    }\n\n    if(catchParams.phase == 4) {\n      if(!this.isDivContextLoaded()) return newParams;\n      this.changePokemonFromDivContext();\n      catchParams.phase = 3;\n      return newParams;\n    }\n\n    if(catchParams.phase == 5) {\n      if(!this.isDivContextLoaded()) return newParams;\n      this.chooseItemInFight();\n      catchParams.phase = 6;\n      return newParams;\n    }\n\n    if(catchParams.phase == 6) {\n      if(!this.isHintsWithItemsLoaded()) return newParams;\n      let throwingSuccess = this.findAndThrowPokeball(catchParams.allowedPokeballs);\n      if(!throwingSuccess) {\n        console.log('no pokeballs! cmon, man');\n        return newParams;\n      }\n      catchParams.phase = 3;\n      newParams.needHeal = true;\n      this.settings.commonHeart.turnWildPokemons(false);\n      return newParams;\n    }\n\n    if(catchParams.phase == 7) {\n      //console.log(`catched: ${catchParams.catched}`);\n      //console.log(`phase 7:`, newParams);\n      if(!catchParams.catched) {\n        newParams.needCatch = false;\n        newParams.catchParams = undefined;\n        return newParams;\n      }\n\n      //console.log(`phase 7: reached:${params.destinationReached} direction:${params.direction}`);\n      if(params.destinationReached && params.direction == 'fwd') {\n        //console.log('now i leave pokemonss')\n        newParams.needCatch = false;\n        newParams.catchParams = undefined;\n        return this.leaveLastPokemonInPC()\n          .then(_ => newParams);\n      }\n\n      return newParams;\n    }\n  }\n\n  isPokemonShouldBeCaughtAutomatically() {\n    let numbersForCatch = this.settings.forbiddennumbers.match(/!\\d+;?/g);\n    if(!numbersForCatch || numbersForCatch.length < 1) return false;\n\n    let enemyNumber = +this.settings.killerHeart.getEnemyPokemonNumberAsString();\n    if(numbersForCatch.every(number => +number.replace(/!(\\d+);?/,'$1') != +enemyNumber)) return false;\n\n    return true;\n  }\n\n  /*\n    0) open team window\n    1) find pokemon by id ? 2) : 9)\n      1) click on pokemon ball\n      2) choose 'В битву'\n      3) click special attack\n        4) click attack for waiting\n          or\n        5) click ball\n        6) change pokemons if > 1 untile hp min -> 9)\n      or\n    5) click ball\n    7) click 'Использовать предмет'\n    8) click pokeball\n  */\n\n  setSettings(settings = {}) {\n    this.settings = settings;\n  }\n\n  /* catcher methods */\n\n  setObserverIV(mode) {\n    if(!mode) {\n      if(!this.observerIV) return;\n      this.observerIV.disconnect();\n      return;\n    }\n    let observer = new MutationObserver(_ => {\n      setTimeout( this.showEnemyIVhp, 0 );\n    });\n    let config = {attributes: true, childList: true, subtree: true};\n    let enemyDiv = document.querySelector('#divFightH');\n    if(!enemyDiv) return;\n    observer.observe(enemyDiv, config);\n    this.observerIV = observer;\n  }\n\n  showEnemyIVhp()\n  {\n    let lvlDiv = document.querySelector('#divFightH .pokemonBoxCard .lvl');\n\n    if(!lvlDiv) return;\n    if(lvlDiv.getAttribute('data-changed')) return;\n    let globalVars = JSON.parse(document.querySelector('[data-globalvarsstore]').value);\n    let hpStat = globalVars.enemyHPmax;\n    let enemyNumber = globalVars.enemyNumber;\n    let lvl = globalVars.enemyLvl;\n    let hpBase = allBaseHPpoks[enemyNumber];\n\n    let maxIVhp  = Math.floor(100*(hpStat-9.5-lvl)/lvl-(hpBase*2)-0.0001);\n    let minIVhp  = Math.ceil(100*(hpStat-10.5-lvl)/lvl-(hpBase*2));\n\n    let spanWithIV = document.createElement('span');\n    spanWithIV.classList.add('killerApp__spanIV');\n    spanWithIV.innerHTML = ` /IVhp: ${minIVhp}-${maxIVhp}`;\n    lvlDiv.appendChild(spanWithIV);\n    lvlDiv.setAttribute('data-changed', '1');\n  }\n\n  /* functions for catching: */\n\n  /* phase 0: prepare to catch */\n  catchPreparing() {\n    let pokemonId = +this.settings.autocatchsettings.replace(/[^]*?\\/\\s?(?:id)?([^]*?)\\/[^]*/,'$1').trim();\n    if(!pokemonId || isNaN(pokemonId)) {\n      console.log('no pokemonId');\n      return false;\n    }\n    //let pokemonId = '3660958';\n    let catcherAttackNumber = +this.settings.autocatchsettings.replace(/[^]*?\\/[^]*?\\/\\s*(\\d+?)\\s*?\\/[^]*/,'$1').trim();\n    if(!catcherAttackNumber || isNaN(catcherAttackNumber) || catcherAttackNumber < 1 || catcherAttackNumber > 4) {\n      console.log('no correct catcher attack number');\n      return false;\n    }\n    //console.log(`catchar attack ${catcherAttackNumber}`);\n    let allowedPokeballs = ['1', '2', '4'];\n    let pokeballsNames = ['покебол', 'монстробол', 'pokeball', 'гритбол', 'greatball',\n        'ультрабол', 'ultraball', 'мастербол', 'masterball'];\n    let pokeballsParams = this.settings.autocatchsettings.replace(/([^]*?)\\/[^]*/i, '$1').trim().split(';').filter(_ => _);\n    //console.log(`pokeball params: `, pokeballsParams);\n    pokeballsParams.forEach(pokeball => {\n      let numberPokeball = pokeballsNames.findIndex(name => !!pokeball.match(new RegExp(name, 'i')));\n      switch(numberPokeball) {\n        case 0: case 1: case 2:\n          numberPokeball = 1; break;\n        case 3: case 4:\n          numberPokeball = 2; break;\n        case 5: case 6:\n          numberPokeball = 4; break;\n        case 7: case 8:\n          numberPokeball = 3; break;\n        default: return;\n      }\n      let isPokeballDepricated = !!pokeball.match(/!/);\n      if(isPokeballDepricated) {\n        allowedPokeballs = allowedPokeballs.filter(allowedNumber => allowedNumber != numberPokeball);\n      } else {\n        if(allowedPokeballs.findIndex(allowedNumber => allowedNumber == numberPokeball) != -1) return;\n        allowedPokeballs.push(numberPokeball);\n      }\n    });\n\n    let waitAttackNumber = +this.settings.autocatchsettings.replace(/[^]*?\\/[^]*?\\/[^]*?\\/\\s*?(\\d+?)/,'$1').trim();\n    waitAttackNumber = isNaN(waitAttackNumber) ? 0 : waitAttackNumber;\n    //console.log(`wait attack: ${waitAttackNumber}`);\n    return {id: pokemonId, specialAttackNumber: catcherAttackNumber,\n            waitAttackNumber: waitAttackNumber, allowedPokeballs: allowedPokeballs};\n  }\n\n  /* phase 1: open team window */\n  isTeamOpenedAndLoaded() {\n    let panelWithTeam = document.querySelector('#divDockMenu .divDockPanels');\n    let teamDiv = panelWithTeam.querySelector('.divPokeTeam');\n    if(teamDiv.classList.contains('ajxloading')) return false;\n    return true;\n  }\n\n  openTeamDiv() {\n    let menuButtons = document.querySelectorAll('#divDockMenu .divDockIn .icon');\n    if(menuButtons.length < 1) return;\n    menuButtons[1].click();\n  }\n\n  /* phase 2-3 */\n  findPokemonAndClickTheBallById(pokemonId) {\n    //console.log(`trying to call poke with id${pokemonId}`);\n    let ballWasClicked = Array.from(document.querySelectorAll('.divPokeTeam .pokemonBoxCard'))\n      .some(pokemonCard => {\n        let currentIDdiv = pokemonCard.querySelector('.id');\n        if(!currentIDdiv) return false;\n        let currentID = currentIDdiv.innerHTML.match(pokemonId);\n        if(!currentID) return false;\n        let ballToClick = pokemonCard.querySelector('.ball');\n        if(!ballToClick) return false;\n        ballToClick.click();\n        return true;\n      });\n    if(ballWasClicked) return true;\n    console.log(`i cant find pokemon with this id.`);\n    return false;\n  }\n\n  /* phase 4 */\n  sendPokemonInBattle() {\n    //console.log(`now im trying to choose context item \"В битву\"`);\n    let contextItems = Array.from(document.querySelectorAll('.divContext .divElement'));\n    let pokemonChangeStarted = contextItems.some(item => {\n      if(!item.innerHTML.match(/в битву/i)) return false;\n      item.click();\n      return true;\n    });\n    //console.log(`pokemon changing: ${pokemonChangeStarted}`);\n    return pokemonChangeStarted;\n  }\n\n  /* phase 5 */\n  doSpecialAttack(attackNumber) {\n    return this.settings.killerHeart.clickAttack(attackNumber);\n  }\n\n  /* phase 6 */\n  doAttackForWaiting(attackNumber) {\n    return this.settings.killerHeart.clickAttack(attackNumber);\n  }\n\n  isEnemyHpMinimal() {\n    let enemyHp = this.settings.killerHeart.getEnemyHPpercents();\n    if(enemyHp <= 30) return true;\n    return false;\n  }\n\n  /* phase 7 */\n  clickPokeballOnDivFightI() {\n    let dummy = document.querySelector('#divFightI .pokemonBoxDummy');\n    if(dummy) dummy.click();\n    else document.querySelector('#divFightI .pokemonBoxCard .boxleft .ball').click();\n  }\n\n  isDivContextLoaded() {\n    let divContext = document.querySelector('.divContext');\n    if(!divContext || divContext.style.display == 'none') return false;\n    let divContextTitle = document.querySelector('.divContext .divTitle').innerHTML;\n    if(!divContextTitle.match(/монстра/i)) return false;\n    let pokemons = document.querySelectorAll('.divContext .divElement');\n    if(!pokemons || pokemons.length < 1) return false;\n    return true;\n  }\n\n  /* phase 8 */\n  changePokemonFromDivContext() {\n    let pokemons = document.querySelectorAll('.divContext .divElement');\n    let numberPokemons = document.querySelectorAll('.divContext .divElement .pokemonBoxTiny').length;\n    pokemons[~~((numberPokemons)*Math.random())].click();\n  }\n\n  /* phase 9 */\n  chooseItemInFight() {\n    let callBag = document.querySelectorAll('.divContext .divElement');\n    let numberPokemons = document.querySelectorAll('.divContext .divElement .pokemonBoxTiny').length;\n    let bagNumber = (callBag.length - numberPokemons) == 2 ? callBag.length - 2 : callBag.length - 1;\n    callBag[bagNumber].click();\n  }\n\n  /* phase 10 */\n  isHintsWithItemsLoaded() {\n    let divHintTitle = document.querySelector('.hint .hinttitle').innerHTML;\n    if(!divHintTitle.match(/Использовать в битве/i)) {\n      console.log(`no \"Использовать в битве\"`);\n      return false;\n    }\n    let hintContent = document.querySelector('.hint .hintcontent');\n    let balls = document.querySelectorAll('.hint .divItemFightlist .item');\n    if(!balls || balls.length < 1 || hintContent.classList.contains('loading'))\n      return false;\n    return true;\n  }\n\n  findAndThrowPokeball(allowedItems) {\n    let items = document.querySelectorAll('.hint .divItemFightlist .item');\n    items = Array.from(items);\n    let ballThrowed = items.some(item => {\n      let itemImage = item.querySelector('img');\n      if(!itemImage) return false;\n      let isItemBall = !!itemImage.src.match(/ball/i);\n      if(!isItemBall) return false;\n      let itemNumber = +itemImage.src.replace(/.*?(\\d+)\\.png/i, '$1');\n      let isItemNumberAllowed = allowedItems.findIndex(item => item == itemNumber);\n      if(isItemNumberAllowed == -1) return false;\n      item.click();\n      return true;\n    });\n    if(!ballThrowed) {\n      console.log('No pokeballs!!!', items);\n      return false;\n    }\n    return true;\n  }\n\n  /*     */\n\n  isPokemonWasCaught() {\n    return document.querySelector('#divFightLog .greennumber') &&\n      !!document.querySelector('#divFightLog .greennumber').innerHTML.match(/монстр пойман/i);\n  }\n\n  isPokemonCanBeCaught() {\n    let globalVars = JSON.parse(document.querySelector('[data-globalvarsstore]').value);\n    let isPokemonCatchable = !!globalVars.enemyCatchable;\n    /*\n    let teamLink = 'https://game.league17.ru/do/pokes/load/team';\n    let isTeamHaveEmptySlot = await this.settings.organism.sendRequest(teamLink)\n      .then(response => {return response.object ? response.object.length < 6 : 0});*/\n    return isPokemonCatchable;\n  }\n\n  leaveLastPokemonInPC() {\n    let teamLink = 'https://game.league17.ru/do/pokes/load/team';\n    let leavePokemonLink = 'https://game.league17.ru/do/pc/farm/poke';\n    let leavPokemonParams = [{key:'vars', value: 0}];\n    return this.settings.organism.sendRequest(teamLink)\n    .then(response => {\n      return response.object && response.object[response.object.length-1] &&\n      response.object[response.object.length-1].id})\n    .then(id => this.settings.organism.sendRequest(leavePokemonLink, [{key:'vars', value: `${id}/0`}]));\n    //.then(response => console.log(response.alerten && response.alerten.type) );\n  }\n\n}\n\nexport default CatcherHeart;","class CommonHeart {\n  constructor() {\n    this.init();\n  }\n\n  init() {\n    this.settings = {};\n    this.nextPulse = this.nextPulse.bind(this);\n    this.setSettings = this.setSettings.bind(this);\n  }\n\n  nextPulse(params={}) {\n    let newParams = {...params};\n\n    let isFight = this.isFight();\n    //this.showLocationIds();\n\n    newParams.isFight = isFight;\n    return newParams;\n  }\n\n  setSettings(settings = {}) {\n    this.settings = settings;\n  }\n\n  /* game Functions */\n\n  showLocationIds() {\n    let locationButtons = document.querySelectorAll('#divLocGo > .button');\n    let nextLocationButtons = Array.from(locationButtons)\n      .forEach(locationButton => {\n        if(locationButton.innerHTML.match(/\\[id\\d+\\]/)) return;\n        let btnWrapper = locationButton.outerHTML;\n        let locationId = btnWrapper.match(/btnGo\\d+/)[0].replace('btnGo','');\n        locationButton.innerHTML += ` [id${locationId}]`;\n        let contentWidth = locationButton.innerHTML.length*10;\n        if(locationButton.offsetWidth > contentWidth) return;\n        locationButton.style.width = `${contentWidth}px`;\n      });\n  }\n\n  isFight() {\n    let fightDiv = document.querySelector('#divVisioFight');\n    if(fightDiv.style.display == 'none') return 0; //no fight\n    return 1; //fight is right now\n  }\n\n  turnWildPokemons(newState) {\n    let buttonsDiv = document.querySelector('#divInputButtons');\n    let turnWildButton = buttonsDiv.querySelector('.btnSwitchWilds');\n    if(newState != turnWildButton.classList.contains('pressed')) turnWildButton.click();\n  }\n\n  closeFightDiv() {\n    let movesDiv = document.querySelector('#divFightI .moves');\n    let closeButton = document.querySelectorAll('#divFightButtons .button');\n    if((movesDiv && movesDiv.style.display != 'none') || closeButton[4].style.display == 'none') return;\n    closeButton[4].click();\n  }\n\n  getPokemonOpenParameter(options={}) {\n    let nameDivWithPokemonInfo = options.pokemonOwner == 'player' ? '#divFightI' : '#divFightH';\n    let nameDivWithParams = options.parameter == 'exp' ? '.barEXP' : '.barHP';\n    let fightDivWithPokemon = document.querySelector(nameDivWithPokemonInfo);\n    if(!fightDivWithPokemon) return -1;\t// no fight?\n    let paramBar = fightDivWithPokemon.querySelector(nameDivWithParams);\n    if(!paramBar) return -2; //no param bar ?\n    let pokemonParamPercents = +paramBar.firstElementChild.style.width.replace('%','');\n    return pokemonParamPercents;\n  }\n\n  turnAutoFight(newState) {\n    let autofightButtonCheckbox = document.querySelector('[data-changeaction=autofight]>input');\n    if(newState != autofightButtonCheckbox.checked) autofightButtonCheckbox.click();\n  }\n\n  checkingIsTeamOpenedAndLoaded() {\n    let panelWithTeam = document.querySelector('#divDockMenu .divDockPanels');\n    if(!panelWithTeam || panelWithTeam.style.display == 'none') return this.openTeamDiv();\n    let teamDiv = panelWithTeam.querySelector('.divPokeTeam');\n    if(teamDiv.classList.contains('ajxloading'))\n    return this.settings.organism.wait(1000)\n      .then(_ => this.checkingIsTeamOpenedAndLoaded());\n  }\n\n  openTeamDiv() {\n    let menuButtons = document.querySelectorAll('#divDockMenu .divDockIn .icon');\n    if(menuButtons.length < 1) return;\n    menuButtons[1].click();\n    return this.settings.organism.wait(1000)\n      .then(_ => this.checkingIsTeamOpenedAndLoaded());\n  }\n\n}\n\nexport default CommonHeart;","class CookieMaker {\r\n  // возвращает cookie с именем name, если есть, если нет, то undefined\r\n  static getCookie(name) {\r\n    var matches = document.cookie.match(new RegExp(\r\n      \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n    ));\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n  }\r\n\r\n  static setCookie(name, value, options) {\r\n    options = options || {};\r\n\r\n    var expires = options.expires;\r\n\r\n    if (typeof expires == \"number\" && expires) {\r\n      var d = new Date();\r\n      d.setTime(d.getTime() + expires * 1000);\r\n      expires = options.expires = d;\r\n    }\r\n    if (expires && expires.toUTCString) {\r\n      options.expires = expires.toUTCString();\r\n    }\r\n\r\n    value = encodeURIComponent(value);\r\n\r\n    var updatedCookie = name + \"=\" + value;\r\n\r\n    for (var propName in options) {\r\n      updatedCookie += \"; \" + propName;\r\n      var propValue = options[propName];\r\n      if (propValue !== true) {\r\n        updatedCookie += \"=\" + propValue;\r\n      }\r\n    }\r\n\r\n    document.cookie = updatedCookie;\r\n  }\r\n}\r\n\r\nexport default CookieMaker;","class HealerHeart {\n  constructor() {\n    this.init();\n  }\n\n  init() {\n    this.settings = {};\n    this.nextPulse = this.nextPulse.bind(this);\n    this.setSettings = this.setSettings.bind(this);\n    this.healAll =this.healAll.bind(this);\n    this.isTeamRestored = this.isTeamRestored.bind(this);\n  }\n\n  nextPulse(params = {}) {\n    if(!params.needHeal || params.isFight || !this.settings.autoheal) return params;\n    if(params.nextLocationNumber != null && !params.destinationReached) return params;\n    let newParams = {...params};\n\n    if(params.destinationReached && params.direction == 'fwd') {\n      //console.log('we have reached a pc');\n      newParams.direction = 'bck';\n      newParams.destinationReached = false;\n      return this.healAll()\n        .then(_ => newParams);\n    }\n\n    if(params.destinationReached && params.direction != 'fwd') {\n      //console.log('we have back to farm place ;)');\n      newParams.needHeal = false;\n      newParams.needMove = false;\n      this.settings.commonHeart.turnWildPokemons(true);\n      return newParams;\n    }\n\n    //console.info('go to heal');\n    newParams.needMove = true;\n    newParams.waySource = this.settings.waytoheal;\n    return newParams;\n  }\n\n  setSettings(settings={}) {\n    this.settings = settings;\n  }\n\n  /* healing commands */\n\n  healAll() {\n    let healLink = 'https://game.league17.ru/do/pc/heal/poke';\n    let params = [{key:'vars', value: 0}];\n    let healResponseChecker = (response) => {\n      if(!response || !response.alerten || response.alerten.type != 'success') {\n        //console.log(response.alerten);\n        throw 'Error healing';\n      }\n      return true;\n    };\n    return this.settings.organism.sendRequest(healLink, params)\n    .then(healResponseChecker)\n    .then(this.isTeamRestored);\n  }\n\n  isTeamRestored() {\n    let teamRestoringChecker = (teamResponse) => {\n      let team = teamResponse.object;\n      let teamNotRestored = team.some(pokemon => {\n        if(pokemon.hp < pokemon.hp_max) return true;\n        let moves = Object.values(pokemon.moves);\n        let isMovesNotRestored = moves.some(move => {\n          if(!move)return false;\n          return move.pp < move.pp_max;\n        });\n      });\n      return !teamNotRestored;\n    }\n\n    return this.settings.organism.sendRequest('https://game.league17.ru/do/pokes/load/team')\n      .then(teamRestoringChecker);\n    /*\n    let nameDivWithParams = '.barHP';\n    let team = document.querySelectorAll('.divPokeTeam .minicardContainer');\n    if(team.length == 0) return false;\n    let isPokemonsNotRestored = team.some(pokemonCard => {\n      // hp check\n      let hpBar = pokemonCard.querySelector('.barHP');\n      if(!hpBar) return true; //no hp bar ?\n      let pokemonHpPercents = +hpBar.firstElementChild.style.width.replace('%','');\n      if(pokemonHpPercents < 100) return true;\n\n      // pp check\n      let stringsWithPP = pokemonCard.querySelectorAll('.divMoveParams');\n      let isPPNotFull = stringsWithPP.some(stringWithPP => {\n        let currentPP = +stringWithPP.match(/\\d+\\//)[0].replace('/','');\n        let maxPP = +stringWithPP.match(/\\/\\d+/)[0].replace('/','');\n        return currentPP/maxPP < 1;\n      });\n\n      return isPPNotFull;\n    });\n\n    return !isPokemonsNotRestored; */\n  }\n\n}\n\nexport default HealerHeart;","let func = `(function() {\n  let tempStore = '{}';\n\n  function getOldInfo() {\n    let store = document.querySelector('[data-globalvarsstore]');\n    if(!store) return JSON.parse(tempStore);\n    let oldInfo = store.value ? JSON.parse(store.value) : JSON.parse(tempStore);\n    return oldInfo;\n  }\n\n  function saveInfoToStore(infoData) {\n    let store = document.querySelector('[data-globalvarsstore]');\n    if(!store) {\n      tempStore = JSON.stringify(infoData);\n      return;\n    }\n    store.value = JSON.stringify(infoData);\n  }\n\n  function parseResponse(request) {\n    try{\n      let respBody = JSON.parse(request.response);\n      let info = getOldInfo();\n      if(respBody.object) {\n        let obj = respBody.object;\n        info.t_key = obj.key ? obj.key : info.t_key;\n        info.locId = obj.loc ? obj.loc.id : info.locId;\n        if (obj.fight) {\n          info.enemyHPmax = obj.fight.side.H.poke.hp_max || info.enemyHPmax;\n          info.enemyNumber = obj.fight.side.H.poke.sp_id || info.enemyNumber;\n          info.enemyLvl = obj.fight.side.H.poke.lvl || info.enemyLvl;\n          info.enemyShine = obj.fight.side.H.poke.shine || info.enemyShine;\n          info.enemyCatchable = !obj.fight.side.H.poke.wild.nocatch || info.enemyCatchable;\n          info.weather = obj.fight.weather || info.weather;\n        }\n\n        let side = obj.fight && obj.fight.side || obj.side;\n        if(side) {\n          info.enemyHP = side.H.poke.hp || info.enemyHP;\n          info.playerPokHP = side.I.poke.hp || info.playerPokHP;\n          info.playerPokMaxHP = side.I.poke.hp_max || info.playerPokMaxHP;\n          info.playerPokExp = side.I.poke.exp.cur || info.playerPokExp;\n          info.playerPokNextExp = side.I.poke.exp.next || info.playerPokNextExp;\n          info.playerPokPrevExp = side.I.poke.exp.prev || info.playerPrevExp;\n          info.playerMovesPP = side.I.poke.moves && isNaN(side.I.poke.moves) &&\n            Object.values(side.I.poke.moves)\n            .filter(_ => _).map(move => ({pp: move.pp, maxpp: move.pp_max})) || info.playerMovesPP;\n        }\n\n        saveInfoToStore(info);\n      }\n    } catch(err) {\n      console.log(\\`Error getting response\\n\\`, err, '\\\\nRequest:', {...request}, '\\\\nResponse:', JSON.stringify(request.response, null, 2));\n    }\n  }\n\n  let origOpen = XMLHttpRequest.prototype.open;\n  let origSend = XMLHttpRequest.prototype.send;\n  let exampleRequest = {};\n  XMLHttpRequest.prototype.open = function() {\n      exampleRequest.openArgs = arguments;\n      this.addEventListener('load', function(evt) {\n          if(this.status != 200) return;\n          exampleRequest.response = this.responseText;\n          parseResponse(exampleRequest);\n      });\n\n      origOpen.apply(this, arguments);\n  };\n\n  XMLHttpRequest.prototype.send = function() {\n      exampleRequest.sendArgs = arguments;\n      origSend.apply(this, arguments);\n  };\n\n\n})();`;\n\nexport default function createRequestsHook() {\n  let scr = document.createElement('script');\n  let code = document.createTextNode(func);\n  scr.appendChild(code);\n  (document.body || document.head).appendChild(scr);\n}","export default function spillGlobalVars() {\r\n  let scr = document.createElement('script');\r\n  scr.setAttribute('data-mustbedeleted','');\r\n  let func = `function getTKey() {\r\n    let elementToWrite = document.querySelector('[data-globalvarsstore]');\r\n    let key = 'not_found';\r\n    for(let keyWord in window){\r\n      if(window[keyWord] && window[keyWord].key && (typeof window[keyWord].key).match(/string/i)) {\r\n        key = window[keyWord].key;\r\n      }\r\n    }\r\n    let globalvarsobject = {\r\n      t_key: key\r\n    }\r\n    elementToWrite.value = JSON.stringify(globalvarsobject);\r\n    let src = document.querySelector('[data-mustbedeleted]');\r\n    src.remove();\r\n  }`;\r\n  let code = document.createTextNode(`(${func})()`);\r\n  scr.appendChild(code);\r\n  (document.body || document.head).appendChild(scr);\r\n};","class KillerHeart {\n  constructor() {\n    this.init();\n  }\n\n  init() {\n    this.settings = {};\n    this.nextPulse = this.nextPulse.bind(this);\n    this.setSettings = this.setSettings.bind(this);\n  }\n\n  switchAlarm(value) {\n    if(!value || !this.settings.alarmswitch) return this.settings.organism.alarm.stopPlay();\n    this.settings.organism.alarm.startPlay();\n  }\n\n  nextPulse(params = {}) {\n    if(!params.isFight) {\n      return params;\n    }\n\n    let newParams = {...params};\n\n    let isCaptcha = this.isCaptchaEnterNeed();\n    newParams.isCaptcha = isCaptcha;\n    if(isCaptcha) {\n      console.log('u should enter captcha');\n\n      // for electron wrapper\n      if (window.killerExtension && window.killerExtension.shotCaptcha) {\n        window.killerExtension.shotCaptcha();\n      }\n\n      this.switchAlarm(true);\n      return newParams;\n    };\n    this.switchAlarm(false);\n\n    let numberOfPermittedAttacks = this.getNumberOfPermittedAttacks();\n    if(!numberOfPermittedAttacks) {\n      //console.log('no permitted attacks');\n      return newParams;\n    };\n\n    newParams.killedCounter = newParams.killedCounter ? newParams.killedCounter : 0;\n    let fightStatus = this.getFightStatus();\n    switch(fightStatus) {\n      case 1: case 2: case 3:\n        if(fightStatus == 2) this.settings.organism.killedCounter++;\n        if(newParams.needCatch && newParams.catchParams) {\n          newParams.catchParams.catched = this.settings.catcherHeart.isPokemonWasCaught();\n          newParams.catchParams.phase = 7;\n        }\n        this.settings.commonHeart.closeFightDiv();\n        return newParams;\n      case 4:\n        console.log(`Pokemon was killed but enemy was killed too`);\n        this.settings.organism.killedCounter++;\n        this.settings.commonHeart.turnWildPokemons(false);\n        this.settings.commonHeart.closeFightDiv();\n        newParams.needHeal = true;\n        return newParams;\n      case 5:\n        console.log(`Pokemon was killed`);\n        this.settings.commonHeart.turnWildPokemons(false);\n        //this.settings.commonHeart.closeFightDiv();\n        newParams.needHeal = true;\n        return this.changePokemon().then(_ => newParams);\n    }\n\n    if(this.settings.controlexp && !isNaN(this.settings.controlexp)) {\n      let currentExp = this.getPlayerPokemonCurrentEXPpercents();\n      let criticalExp = this.settings.controlexp > 90 ? this.settings.controlexp : 90;\n      if(currentExp >= criticalExp) return;\n    }\n\n    let currentHp = this.getPlayerPokemonCurrentHPpercents();\n    let criticalHp = this.settings.controlhp > 20 ? this.settings.controlhp : 20;\n    if(currentHp <= criticalHp) {\n      this.settings.commonHeart.turnWildPokemons(false);\n      newParams.needHeal = true;\n    }\n\n    let enemyPokemonNumber = this.getEnemyPokemonNumberAsString();\n    newParams.lastPokemonNumber = enemyPokemonNumber;\n    if( this.isAttackForbiddenForThisNumber() &&\n        (this.settings.catcherHeart.isPokemonCanBeCaught() ||\n        !this.settings.catcherHeart.isPokemonShouldBeCaughtAutomatically())) {\n      //console.log('forbidden pokemon');\n\n      newParams.waitingForCatchCounter && newParams.waitingForCatchCounter++ ||\n        (newParams.waitingForCatchCounter = 0);\n      newParams.needCatch = true;\n      return newParams;\n    }\n\n    let enemyType = this.isEnemyNormal();\n    if(!enemyType) {\n      console.log('Enemy is shine or smt else');\n      this.switchAlarm();\n      //newParams.needCatch = true;\n      newParams.waitingForCatchCounter && newParams.waitingForCatchCounter++ ||\n        (newParams.waitingForCatchCounter = 0);\n      return newParams;\n    }\n\n    this.repeatAttackCounter = 0;\n    if(this.numberOfPermittedAttacksPP() < 2) {\n      console.log('PP is over. Need Heal');\n      this.settings.commonHeart.turnWildPokemons(false);\n      newParams.needHeal = true;\n      this.chooseAttack(true);\n      return newParams;\n    }\n\n    this.chooseAttack();\n    return newParams;\n  }\n\n  /* fight actions & parametres */\n\n  isCaptchaEnterNeed() {\n    let captchaDiv = document.querySelector('#divFightCaptcha');\n    let captchaImage = captchaDiv.querySelector('img');\n    if(captchaDiv.style.display == 'none' ||\n        !captchaImage ||\n        captchaImage.src == undefined)\n      return 0; // there is no captcha form\n    return 1; // oops, it wants captcha\n  }\n\n  getFightStatus() {\n    let fightStatusText = document.querySelector('#divFightAction').innerHTML;\n    if(fightStatusText.match(/ничья/i)) return 1; // draw\n    if(fightStatusText.match(/вы победили/i)) return 2; // victory\n    if(fightStatusText.match(/вы проиграли/i)) return 3; // lose\n\n    let dummyInsteadPlayerPokemon = document.querySelector('#divFightI .pokemonBoxDummy');\n    let dummyInsteadEnemyPokemon = document.querySelector('#divFightH .pokemonBoxDummy');\n    if(dummyInsteadPlayerPokemon && dummyInsteadEnemyPokemon) return 4;\n    //pokemon was killed/changed but u can close window\n    if(dummyInsteadPlayerPokemon && !dummyInsteadEnemyPokemon) return 5;\n    //pokemon was killed/changed but u can get another\n\n    return 0; // it's okay, fight is continuing\n  }\n\n  getNumberOfPermittedAttacks() {\n    return this.settings.attack.filter(attack=>attack==1).length;\n  }\n\n  getWeather() {\n    let weatherDiv = document.querySelector('#divFightWeather');\n    let hail = weatherDiv.querySelector('.w3');\n    if(hail) return 1; // hail\n    let sandstorm = weatherDiv.querySelector('.w4');\n    if(sandstorm) return 2; //sandstorm\n    return 0; // sun/rain etc\n  }\n\n  chooseAttack(lastTry) {\n    if(!this.getNumberOfPermittedAttacks()) return;\n    //if(this.numberOfPermittedAttacksPP() < 1) return; //excess checking\n    let randomAttack = ~~(Math.random()*4);\n    if(this.settings.attack[randomAttack]) {\n      let resultClicking = this.clickAttack(randomAttack, lastTry);\n      if(resultClicking) return;\n    }\n    this.repeatAttackCounter++;\n    if(this.repeatAttackCounter > 100) throw 'Too much attacks repeat';\n    this.chooseAttack(lastTry);\n  }\n\n  clickAttack(attackNumber, lastTry) {\n    if(attackNumber > 3 || attackNumber < 0) return false;\n    if(this.getPlayerPokemonAttackPP(attackNumber) < 1 && !lastTry) return false;\n    let moveBox = document.querySelectorAll('#divFightI .moveBox')[attackNumber];\n    if(!moveBox) return false;\n    if(!moveBox.querySelector('.divMove')) return false;\n    let divForClicking = moveBox.querySelector('.divMoveInfo');\n    divForClicking.click();\n    return true;\n  }\n\n  /* switch pokemon */\n\n  checkIsPokemonsListToChangeLoaded() {\n    let divContextTitle = document.querySelector('.divContext .divTitle').innerHTML;\n    if(!divContextTitle.match(/выбрать монстра/i)) return this.changePokemon();\n    let pokemons = document.querySelectorAll('.divContext .divElement');\n    if(!pokemons || pokemons.length < 1)\n    return this.settings.organism.wait(1000)\n      .then(_ => this.checkIsPokemonsListToChangeLoaded());\n    return true;\n  }\n\n  changePokemon() {\n    return this.settings.organism.wait(500)\n    .then(_ => {\n      document.querySelector('#divFightI .pokemonBoxDummy').click();\n    })\n    .then(_ => this.settings.organism.wait(1000))\n    .then(_ => this.checkIsPokemonsListToChangeLoaded())\n    .then(_ => {\n      let pokemons = document.querySelectorAll('.divContext .divElement');\n      pokemons[~~(pokemons.length*Math.random())].click();\n    })\n    .then(_ => this.settings.organism.wait(1000))\n  }\n\n  /* infight parametres & actions with player pokemon */\n\n  getPlayerPokemonCurrentHPpercents() {\n    return this.settings.commonHeart.getPokemonOpenParameter({pokemonOwner:'player',parameter:'hp'});\n  }\n\n  getPlayerPokemonCurrentEXPpercents() {\n    return this.settings.commonHeart.getPokemonOpenParameter({pokemonOwner:'player',parameter:'exp'});\n  }\n\n  getPlayerPokemonAttackPP(attackNumber) {\n    if(attackNumber > 3 || attackNumber < 0) return false;\n    let stringWithPP = document.querySelectorAll('#divFightI .divMoveParams')[attackNumber].innerHTML;\n    let currentPPValue = +stringWithPP.replace(/\\/\\d+/,'');\n    return currentPPValue;\n  }\n\n  numberOfPermittedAttacksPP() {\n    let sumOfAllPermittedAttacksPP =\n      this.settings.attack.reduce((sum, attackPermission, index) => {\n        if(!attackPermission) return sum;\n        return sum + this.getPlayerPokemonAttackPP(index);\n      }, 0);\n    return sumOfAllPermittedAttacksPP;\n  }\n\n  /* infight parametres & actions with enemy pokemon */\n\n  isEnemyCanBeCaught() {\n    let noCatch = document.querySelector('#divFightOptions .nocatch');\n    return noCatch != null;\n  }\n\n  getEnemyPokemonNumberAsString() {\n    let enemyImage = document.querySelector('#divFightH .image > img');\n    if(!enemyImage) return 0;\n    let enemyNumber = enemyImage.src.match(/\\d{3}/)[0];\n    return enemyNumber;\n  }\n\n  getEnemyLevel() {\n    let enemyLevelDiv = document.querySelector('#divFightH .lvl');\n    if(!enemyLevelDiv) return 0;\n    let enemyLevel = +enemyLevel.innerHTML;\n    return enemyLevel;\n  }\n\n  isEnemyNormal() {\n    let enemyRankDiv = document.querySelector('#divFightH .rank');\n    if(!enemyRankDiv) return true;\n    let enemyRankSpan = enemyRankDiv.querySelector('span');\n    if(!enemyRankSpan) {\n      let enemyRank = enemyRankDiv.innerHTML;\n      if(enemyRank.match(/\\S+/)) return false;\n    } else {\n      if(enemyRankSpan.innerHTML.match(/\\S+/)) return false;\n    }\n    return true;\n  }\n\n  getEnemyHPpercents() {\n    return this.settings.commonHeart.getPokemonOpenParameter({pokemonOwner:'enemy',parameter:'hp'});\n  }\n\n  isAttackForbiddenForThisNumber() {\n    let currentNumber = this.getEnemyPokemonNumberAsString();\n    let forbiddenNumbers = this.settings.forbiddennumbers.match(/\\d{1,3};?/g);\n    if(!forbiddenNumbers) return false;\n    return forbiddenNumbers.some(number => +currentNumber == +(number.replace(';','')));\n  }\n\n  /* common actions */\n\n  setSettings(settings={}) {\n    this.settings = settings;\n  }\n\n}\n\nexport default KillerHeart;","let killerHtml = `<div class=\"killer__wrapper\">\r\n  <div class=\"killer__topPanel\"></div>\r\n  <div class=\"killer__controlPanel\">\r\n    <label class=\"killer__controlPanelLabel killer__controlPanelLabel--row\" data-changeaction=\"autofight\">\r\n      <input type=\"checkbox\" />\r\n      <span>AF</span>\r\n    </label>\r\n    <label class=\"killer__controlPanelLabel killer__controlPanelLabel--halfRow\" data-changeaction=\"attack\" data-attacknumber=\"1\">\r\n      <input type=\"checkbox\" />\r\n      <span>Attack 1</span>\r\n    </label>\r\n    <label class=\"killer__controlPanelLabel killer__controlPanelLabel--halfRow\" data-changeaction=\"attack\" data-attacknumber=\"2\">\r\n      <input type=\"checkbox\" />\r\n      <span>Attack 2</span>\r\n    </label>\r\n    <label class=\"killer__controlPanelLabel killer__controlPanelLabel--halfRow\" data-changeaction=\"attack\" data-attacknumber=\"3\">\r\n      <input type=\"checkbox\" />\r\n      <span>Attack 3</span>\r\n    </label>\r\n    <label class=\"killer__controlPanelLabel killer__controlPanelLabel--halfRow\" data-changeaction=\"attack\" data-attacknumber=\"4\">\r\n      <input type=\"checkbox\">\r\n      <span>Attack 4</span>\r\n    </label>\r\n    <div class=\"killer__controlPanelCell\" data-action=\"showsettings\">\r\n      <button class=\"button\">Settings</button>\r\n    </div>\r\n  </div>\r\n  <input data-globalvarsstore=\"\" type=\"hidden\" value=\"\">\r\n</div>`;\r\n\r\n\r\nclass KillerContainer {\r\n  constructor() {\r\n    this.init();\r\n  }\r\n\r\n  createView() {\r\n    let tempDiv = document.createElement('div');\r\n    tempDiv.innerHTML = killerHtml;\r\n    return tempDiv.firstChild;\r\n  }\r\n\r\n  init() {\r\n    this.mainContainer = this.createView();\r\n      this.topPanel = this.mainContainer.querySelector('.killer__topPanel');\r\n      this.controlPanel = this.mainContainer.querySelector('.killer__controlPanel');\r\n      this.globalVarsStore = this.mainContainer.querySelector('[data-globalvarsstore]');\r\n\r\n    this.addTopPanelDragListeners();\r\n\r\n    this.controlPanel.addEventListener(\r\n      'click',\r\n      (evt)=>{this.controlPanelClickListener(evt);}\r\n    );\r\n  }\r\n\r\n  createTopPanel() {\r\n    let topPanel = document.createElement('div');\r\n      topPanel.classList.add('killerMainContainer__topPanel');\r\n    return topPanel;\r\n  }\r\n\r\n  createHiddenInputForGlobalVars() {\r\n    let hiddenDB = document.createElement('input');\r\n    hiddenDB.setAttribute('data-globalvarsstore','');\r\n    hiddenDB.type = 'hidden';\r\n    return hiddenDB;\r\n  }\r\n\r\n  addTopPanelDragListeners() {\r\n    let panel = this.topPanel;\r\n    let moveFlag = false;\r\n    panel.addEventListener('mousedown', ()=>moveFlag=true);\r\n    panel.addEventListener('mouseup', ()=>moveFlag=false);\r\n    document.body.addEventListener('mousemove',(evt)=>{\r\n      if(!moveFlag) return;\r\n      let newTop = evt.pageY - 2*this.topPanel.offsetHeight/3;\r\n      this.mainContainer.style.top = `${newTop}px`;\r\n      let newLeft = evt.pageX - this.mainContainer.offsetWidth/2;\r\n      this.mainContainer.style.left = `${newLeft}px`;\r\n    });\r\n  }\r\n\r\n  getMainContainerElement() {\r\n    return this.mainContainer;\r\n  }\r\n\r\n  controlPanelClickListener(evt) {\r\n    if(evt.target.tagName == 'INPUT'){\r\n      let changedAction = evt.target.parentNode.dataset['changeaction'];\r\n      if(changedAction == 'autofight') {\r\n        if(!this.autoFightStatusChangedListener) return;\r\n        this.autoFightStatusChangedListener(evt.target.checked);\r\n      }\r\n      if(changedAction == 'attack') {\r\n        if(!this.attackStatusChangedListener) return;\r\n        let changedAttackNumber = evt.target.parentNode.dataset['attacknumber'];\r\n        this.attackStatusChangedListener(evt.target.checked, changedAttackNumber);\r\n      }\r\n    }\r\n    if(evt.target.tagName == 'BUTTON') {\r\n      let action = evt.target.parentNode.dataset['action'];\r\n      if(action == 'showsettings') {\r\n        if(!this.settingsButtonClickListener) return;\r\n        this.settingsButtonClickListener();\r\n      }\r\n    }\r\n  }\r\n\r\n  setAutoFightStatusChangedListener(listener) {\r\n    this.autoFightStatusChangedListener = listener;\r\n  }\r\n\r\n  setAttackStatusChangedListener(listener) {\r\n    this.attackStatusChangedListener = listener;\r\n  }\r\n\r\n  setSettingsClickListener(listener) {\r\n    this.settingsButtonClickListener = listener;\r\n  }\r\n}\r\n\r\nexport default KillerContainer;","let settingsViewHtml = `<div class=\"killerSettings__wrapper\">\r\n<div class=\"killerSettings__topPanel\"></div>\r\n<div class=\"killerSettings__controlPanel\">\r\n  <div class=\"killerSettings__controlPanelRow\">\r\n    <div class=\"killerSettings__controlPanelCell\">\r\n      <label class=\"killerSettings__row\" data-changeaction=\"showpokemons\">\r\n        <span>Show pokemons:</span>\r\n        <input type=\"checkbox\" />\r\n      </label>\r\n      <label class=\"killerSettings__row killerSettings__row--innerColumn\" data-changeaction=\"forbiddennumbers\">\r\n        <span>Forbidden numbers:</span>\r\n        <textarea></textarea>\r\n      </label>\r\n      <label class=\"killerSettings__row killerSettings__row--innerColumn\">\r\n        <span>Counter of killed wild pokemons:</span>\r\n        <input type=\"text\" disabled class=\"killerSettings__input killerSettings__input--max\" data-view=\"killedwild\"/>\r\n      </label>\r\n      <label class=\"killerSettings__row\" data-changeaction=\"controlexp\">\r\n        <span>EXP control, %:</span>\r\n        <input type=\"text\" class=\"killerSettings__input\" />\r\n      </label>\r\n    </div>\r\n    <div class=\"killerSettings__controlPanelCell\">\r\n      <label class=\"killerSettings__row\" data-changeaction=\"autoheal\">\r\n        <span>Auto heal:</span>\r\n        <input type=\"checkbox\" />\r\n      </label>\r\n      <label class=\"killerSettings__row killerSettings__row--innerColumn\" data-changeaction=\"waytoheal\">\r\n        <span>Way to healing:</span>\r\n        <textarea></textarea>\r\n      </label>\r\n      <label class=\"killerSettings__row\" data-changeaction=\"controlhp\">\r\n        <span>HP control, %:</span>\r\n        <input type=\"text\" class=\"killerSettings__input\" />\r\n      </label>\r\n    </div>\r\n  </div>\r\n  <div class=\"killerSettings__controlPanelRow\">\r\n    <div class=\"killerSettings__controlPanelCell\">\r\n      <label class=\"killerSettings__row\" data-changeaction=\"alarmswitch\">\r\n        <span>Alarm:</span>\r\n        <input type=\"checkbox\" />\r\n      </label>\r\n      <label class=\"killerSettings__row\" data-changeaction=\"alarmvolume\">\r\n        <span>Alarm volume (0-100):</span>\r\n        <input class=\"killerSettings__input killerSettings__input--min\" type=\"text\" value=\"10\" />\r\n      </label>\r\n      <label class=\"killerSettings__row killerSettings__row--innerColumn\" data-changeaction=\"alarmsrc\" style=\"display:none\">\r\n        <span>Alarm source:</span>\r\n        <input class=\"killerSettings__input killerSettings__input--max\" type=\"text\" />\r\n      </label>\r\n    </div>\r\n    <div class=\"killerSettings__controlPanelCell\">\r\n      <label class=\"killerSettings__row\" data-changeaction=\"showiv\">\r\n        <span>Show IV HP:</span>\r\n        <input type=\"checkbox\" />\r\n      </label>\r\n      <label class=\"killerSettings__row\" data-changeaction=\"autocatch\">\r\n        <span>Autocatch:</span>\r\n        <input type=\"checkbox\" />\r\n      </label>\r\n      <label class=\"killerSettings__row killerSettings__row--innerColumn\" data-changeaction=\"autocatchsettings\">\r\n        <textarea></textarea>\r\n      </label>\r\n    </div>\r\n  </div>\r\n  <div class=\"killerSettings__controlPanelRow\">\r\n    <button class=\"button\">Save</button>\r\n  </div>\r\n</div>\r\n</div>`;\r\n\r\nclass SettingsContainer {\r\n  constructor() {\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.mainWrapper = this.createView();\r\n      this.topPanel = this.mainWrapper.querySelector('.killerSettings__topPanel');\r\n      this.controlPanel = this.mainWrapper.querySelector('.killerSettings__controlPanel');\r\n\r\n    this.addTopPanelDragListeners();\r\n\r\n    this.changeListeners = {};\r\n\r\n    this.controlPanel.addEventListener(\r\n      'change',\r\n      (evt)=>{this.controlPanelChangeListener(evt);}\r\n    );\r\n  }\r\n\r\n  createView() {\r\n    let tempDiv = document.createElement('div');\r\n    tempDiv.innerHTML = settingsViewHtml;\r\n    return tempDiv.firstChild;\r\n  }\r\n\r\n  getMainContainerElement() {\r\n    return this.mainWrapper;\r\n  }\r\n\r\n  addTopPanelDragListeners() {\r\n    let panel = this.topPanel;\r\n    let moveFlag = false;\r\n    panel.addEventListener('mousedown', ()=>moveFlag=true);\r\n    panel.addEventListener('mouseup', ()=>moveFlag=false);\r\n    document.body.addEventListener('mousemove',(evt)=>{\r\n      if(!moveFlag) return;\r\n      let newTop = evt.pageY - 2*panel.offsetHeight/3;\r\n      this.mainWrapper.style.top = `${newTop}px`;\r\n      let newLeft = evt.pageX - this.mainWrapper.offsetWidth/2;\r\n      this.mainWrapper.style.left = `${newLeft}px`;\r\n    });\r\n  }\r\n\r\n  controlPanelChangeListener(evt) {\r\n    if(evt.target.tagName == 'TEXTAREA' || evt.target.tagName == 'INPUT'){\r\n      let changedAction = evt.target.parentNode.dataset['changeaction'];\r\n      if(changedAction == 'forbiddennumbers' ||\r\n         changedAction == 'waytoheal' ||\r\n         changedAction == 'controlhp' ||\r\n         changedAction == 'controlexp' ||\r\n         changedAction == 'autocatchsettings' ||\r\n         changedAction == 'alarmvolume' ||\r\n         changedAction == 'alarmsrc') {\r\n        if(!this.changeListeners[changedAction]) return;\r\n        this.changeListeners[changedAction](evt.target.value);\r\n      }\r\n      if(changedAction == 'showpokemons' ||\r\n         changedAction == 'autoheal' ||\r\n         changedAction == 'showiv' ||\r\n         changedAction == 'autocatch' ||\r\n         changedAction == 'alarmswitch' ) {\r\n        if(!this.changeListeners[changedAction]) return;\r\n        this.changeListeners[changedAction](evt.target.checked);\r\n      }\r\n    }\r\n  }\r\n\r\n  /* funcs for setting listeners */\r\n  setChangeListener(type, listener) {\r\n    this.changeListeners[type] = listener;\r\n  }\r\n}\r\n\r\nexport default SettingsContainer;","class TravellerHeart {\r\n  constructor() {\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.nextPulse = this.nextPulse.bind(this);\r\n    this.setSettings = this.setSettings.bind(this);\r\n  }\r\n\r\n  setSettings(settings={}) {\r\n    this.settings = settings;\r\n  }\r\n\r\n  nextPulse(params={}) {\r\n    let newParams = {...params};\r\n    if(!params.needMove) {\r\n      newParams.nextLocationNumber = null;\r\n      newParams.direction = 'fwd';\r\n      newParams.waySource = '';\r\n      newParams.prevLocationWays = null;\r\n      newParams.destinationReached = false;\r\n    }\r\n\r\n    //console.log(`is fight? ${params.isFight}`, `is Need Move? ${params.needMove}`,\r\n     // `isDestReached ${newParams.destinationReached}`);\r\n\r\n    if(params.isFight || !params.needMove || newParams.destinationReached) return newParams;\r\n\r\n    /*\r\n    if(params.onWrongPlaceCounter > 3) {\r\n      newParams.nextLocationNumber--;\r\n      newParams.prevLocationWays = null;\r\n      return newParams;\r\n    } */\r\n\r\n    //console.log(`place changed?: ${params.prevLocationWays != null && !this.isPlaceWasChanged(params.prevLocationWays)}`);\r\n    if(params.prevLocationWays != null && !this.isPlaceWasChanged(params.prevLocationWays)) {\r\n      //console.log(`place wasn't changed. prev:`, params.prevLocationWays, `counter: `, newParams.onWrongPlaceCounter);\r\n      //newParams.onWrongPlaceCounter = newParams.onWrongPlaceCounter && newParams.onWrongPlaceCounter + 1 || 1;\r\n      return newParams;\r\n    }\r\n\r\n    //newParams.onWrongPlaceCounter = 0;\r\n    //console.log(`direction: ${newParams.direction}`);\r\n\r\n    let wayChain = this.getWay(params.waySource, params.direction);\r\n    let locationNumber = params.nextLocationNumber != null ? params.nextLocationNumber : 0;\r\n\r\n    if(locationNumber >= wayChain.length) {\r\n      newParams.nextLocationNumber = 0;\r\n      newParams.destinationReached = true;\r\n      return newParams;\r\n    }\r\n\r\n    //console.log(wayChain[locationNumber]);\r\n    newParams.nextLocationNumber = locationNumber + 1;\r\n    newParams.prevLocationWays = this.goToLocation(wayChain[locationNumber]);\r\n    return newParams;\r\n  }\r\n\r\n  getWay(waytoheal, direction) {\r\n    if(!waytoheal) return 1; //no input value or empty\r\n    let way = direction == 'fwd' ? waytoheal.match(/([^]+?)\\//) : waytoheal.match(/\\/([^]+)/);\r\n    if(!way) return 2; // no slash in input value\r\n    way = way[1].split(';').map(_ => _.trim()).filter(_ => _);\r\n    return way;\r\n  }\r\n\r\n  goToLocation(locationName) {\r\n    //console.log(locationName);\r\n    let locationNumber = locationName.match(/\\s+\\d+/);\r\n    if(locationNumber) locationName = locationName.replace(/\\s+\\d+/, '');\r\n    locationNumber = locationNumber && !isNaN(+locationNumber[0]) && +locationNumber[0] || 0;\r\n    let locationButtons = document.querySelectorAll('#divLocGo > .button');\r\n    if(locationButtons.length < 1) {\r\n      console.log('There is no exit');\r\n      throw 'No exit here';\r\n    }\r\n\r\n    let nextLocationButtons = Array.from(locationButtons)\r\n      .filter(locationButton => locationButton.innerHTML.match(new RegExp(locationName, 'i')));\r\n\r\n    if(nextLocationButtons.length < 1) {\r\n      console.log(`no such place: ${locationName}`);\r\n      throw `no such place: ${locationName}`;\r\n    }\r\n\r\n    //console.log(`nextLoc: ${locationNumber}`, nextLocationButtons);\r\n    let nextLocationButton = nextLocationButtons[locationNumber];\r\n    //console.log(`nextLocBtn:`, nextLocationButton);\r\n    nextLocationButton.click();\r\n\r\n    return locationButtons;\r\n  }\r\n\r\n  isPlaceWasChanged(oldLocationButtons) {\r\n    let locationButtons = document.querySelectorAll('#divLocGo > .button');\r\n    if(oldLocationButtons.length != locationButtons.length) return true;\r\n\r\n    for(let i = 0; i < oldLocationButtons.length; i++) {\r\n      let locationIdForOldButton = oldLocationButtons[0].outerHTML.match(/btnGo\\d+/).toString();\r\n      let locationIdForNewButton = locationButtons[0].outerHTML.match(/btnGo\\d+/).toString();\r\n      if(locationIdForNewButton != locationIdForOldButton) return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default TravellerHeart;","class TravellerTentacle {\r\n  constructor() {\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n\r\n  }\r\n\r\n  setSettings(settings={}) {\r\n    this.settings = settings;\r\n  }\r\n\r\n  go(to) {\r\n    let direction = to == 'heal' ? 'fwd' : 'bck';\r\n    let way = this.getWay(this.settings.waytoheal, direction);\r\n    if(way == 1 || way == 2) throw 'no way';\r\n    let walkingTheWay = way.reduce((chain, nextWay) =>\r\n      chain.then(_ => this.goToLocation(nextWay)),\r\n      Promise.resolve());\r\n    return walkingTheWay;\r\n  }\r\n\r\n  getWay(waytoheal, direction) {\r\n    if(!waytoheal) return 1; //no input value or empty\r\n    let way = direction == 'fwd' ? waytoheal.match(/([^]+?)\\//) : waytoheal.match(/\\/([^]+)/);\r\n    if(!way) return 2; // no slash in input value\r\n    way = way[1].split(';').map(_ => _.trim()).filter(_ => _);\r\n    return way;\r\n  }\r\n\r\n  goToLocation(locationName) {\r\n    let locationNumber = locationName.match(/\\s+\\d+/);\r\n    if(locationNumber) loactionName = locationName.replace(/\\s+\\d+/, '');\r\n    locationNumber = locationNumber ? locationNumber[0] : 0;\r\n    let locationButtons = document.querySelectorAll('#divLocGo > .button');\r\n    if(locationButtons.length < 1) {\r\n      console.log('There is no exit');\r\n      throw 'No exit here';\r\n    }\r\n\r\n    let nextLocationButtons = Array.from(locationButtons)\r\n      .filter(locationButton => locationButton.innerHTML.match(new RegExp(locationName, 'i')));\r\n\r\n    if(nextLocationButtons.length < 1) {\r\n      console.log(`no such place: ${locationName}`);\r\n      throw `no such place: ${locationName}`;\r\n    }\r\n\r\n    let nextLocationButton = nextLocationButtons[locationNumber];\r\n    //let locationId = nextLocationButton.outerHTML.match(/btnGo\\d+/)[0].replace('btnGo','');\r\n\r\n    nextLocationButton.click();\r\n\r\n    return this.settings.organism.wait(1000)\r\n    .then(_ => this.isPlaceWasChanged(locationButtons));\r\n  }\r\n\r\n  isPlaceWasChanged(oldLocationButtons) {\r\n    let locationButtons = document.querySelectorAll('#divLocGo > .button');\r\n    if(oldLocationButtons.length != locationButtons.length) return true;\r\n\r\n    for(let i = 0; i < oldLocationButtons.length; i++) {\r\n      let locationIdForOldButton = oldLocationButtons[0].outerHTML.match(/btnGo\\d+/).toString();\r\n      let locationIdForNewButton = locationButtons[0].outerHTML.match(/btnGo\\d+/).toString();\r\n      if(locationIdForNewButton != locationIdForOldButton) return true;\r\n    }\r\n\r\n    //console.log('waiting for place changing');\r\n    return this.settings.organism.wait(1000)\r\n      .then(_ => this.isPlaceWasChanged(oldLocationButtons));\r\n  }\r\n}\r\n\r\nexport default TravellerTentacle;","import KillerContainer from './MainContainer';\nimport CommonHeart from './CommonHeart';\nimport KillerHeart from './KillerHeart';\nimport HealerHeart from './HealerHeart';\nimport CatcherHeart from './CatcherHeart';\nimport TravellerHeart from './TravellerHeart';\nimport TravellerTentacle from './TravellerTentacle';\nimport SettingsView from './SettingsContainer';\nimport setRequestsHook from './Inject/RequestsHook';\nimport spillGlobalVars from './Inject/TKeyGetter';\nimport CookieMaker from './CookieMaker';\nimport Alarm from './Alarm';\n\nlet lifesCounter = 0;\n\nclass Killer {\n  constructor(imageReplacer){\n    //this.init();\n    this.setDocumentObserver();\n    setRequestsHook();\n    this.imageReplacer = imageReplacer;\n  }\n\n  init() {\n    this.alarm = new Alarm();\n    this.settingsParametres  = ['forbiddennumbers', 'waytoheal', 'showpokemons', 'autoheal',\n      'showiv', 'controlhp', 'controlexp', 'autocatch', 'autocatchsettings',\n      'alarmsrc', 'alarmswitch', 'alarmvolume'];\n    let killerView = new KillerContainer();\n    let settingsView = new SettingsView();\n\n    let commonHeart = new CommonHeart();\n    let killerHeart = new KillerHeart();\n    let healerHeart = new HealerHeart();\n    let catcherHeart = new CatcherHeart();\n    let travellerHeart = new TravellerHeart();\n    let travellerTentacle = new TravellerTentacle();\n\n    this.settings = {\n      'autofight': false,\n      'attack': [0,0,0,0],\n      'forbiddennumbers': '',\n      'showpokemons': true,\n      'autoheal': true,\n      'commonHeart': commonHeart,\n      'killerHeart': killerHeart,\n      'healerHeart': healerHeart,\n      'catcherHeart': catcherHeart,\n      'travellerHeart': travellerHeart,\n      'travellerTentacle': travellerTentacle,\n      'organism': this\n    };\n\n    this.commonHeart = commonHeart;\n    this.killerHeart = killerHeart;\n    this.healerHeart = healerHeart;\n    this.catcherHeart = catcherHeart;\n    this.travellerHeart = travellerHeart;\n    this.travellerTentacle = travellerTentacle;\n\n    this.killerView = killerView;\n    this.settingsView = settingsView;\n\n    this.killedCounter = 0;\n\n    this.injectViewsIntoDocument();\n    this.setMainViewListeners();\n    this.setSettingsViewListeners();\n\n    this.loadSettings();\n    this.updateViews(this.settings);\n\n    document.addEventListener('keyup', (evt)=>{\n      if(evt.ctrlKey && evt.shiftKey) {\n        if(evt.key == 'H' || evt.key == 'Р') {\n          this.toggleVisionMainContainer();\n        }\n      }\n    });\n  }\n\n  setDocumentObserver() {\n    let observer = new MutationObserver(mut => {\n      if(!document.querySelector('#divLocGo .button')) return;\n      observer.disconnect();\n      this.init();\n      setTimeout(_ => this.settings.globalVars = this.getGlobalVars(), 1000);\n     });\n    let config = {attributes: true, childList: true, subtree: true};\n    observer.observe( document, config );\n  }\n\n  getGlobalVars() {\n    let hiddenStore = document.querySelector('[data-globalvarsstore]');\n    let globalVars = JSON.parse(hiddenStore.value);\n    return globalVars;\n  }\n\n  startKillerLife() {\n    this.currentKillerLife = lifesCounter++;\n    this.killerHeartbeat({ life: this.currentKillerLife });\n  }\n\n  wait(ms, paramToChain) {\n    return new Promise(resolve => {\n      setTimeout(_ => resolve(paramToChain), ms);\n    });\n  }\n\n  showKilledCounter(value) {\n    let counterView = document.querySelector('[data-view=killedwild]');\n    counterView.value = value ? value : 0;\n  }\n\n  killerHeartbeat(blood={}) {\n    if(!this.settings.autofight || this.currentKillerLife !== blood.life) return Promise.resolve(blood);\n\n    this.showKilledCounter(this.killedCounter);\n\n    let randomTimeInterval = (Math.random()*5+2)*1000;\n    return Promise.resolve(blood)\n      .then(this.commonHeart.nextPulse)\n      .then(this.killerHeart.nextPulse)\n      .then(this.catcherHeart.nextPulse)\n      .then(this.healerHeart.nextPulse)\n      .then(this.travellerHeart.nextPulse)\n      .then(blood => this.wait(randomTimeInterval, blood))\n      .then(blood => this.killerHeartbeat(blood));\n  }\n\n  toggleVisionMainContainer() {\n    let killerView = this.killerView.getMainContainerElement();\n    if(killerView.style.display != 'none') killerView.style.display = 'none';\n    else killerView.style.display = 'block';\n  }\n\n  toggleVisionSettingsView() {\n    let settingsView = this.settingsView.getMainContainerElement();\n    if(settingsView.style.display != 'none') settingsView.style.display = 'none';\n    else settingsView.style.display = 'block';\n  }\n\n  injectViewsIntoDocument() {\n    document.body.appendChild(this.killerView.getMainContainerElement());\n    document.body.appendChild(this.settingsView.getMainContainerElement());\n    this.toggleVisionSettingsView();\n  }\n\n  setMainViewListeners() {\n    this.killerView.setAutoFightStatusChangedListener((newState)=>{\n      this.changeSettings({\n        parameter:'autofight',\n        value: newState\n      });\n    });\n\n    this.killerView.setAttackStatusChangedListener((newState, attackNumber)=>{\n      this.changeSettings({\n        parameter:'attack',\n        value: newState,\n        number: attackNumber-1\n      });\n    });\n\n    this.killerView.setSettingsClickListener(_ => this.toggleVisionSettingsView());\n  }\n\n  setSettingsViewListeners() {\n    let parametres = this.settingsParametres;\n    parametres.forEach(parameter => {\n      this.settingsView.setChangeListener(parameter, (newValue) => {\n        this.changeSettings({\n          parameter: parameter,\n          value: newValue\n        });\n      });\n    });\n  }\n\n  changeSettings(newPartOfSettings={}) {\n    let newSettings = {...this.settings};\n    switch(newPartOfSettings.parameter) {\n      case 'autofight':\n      case 'forbiddennumbers':\n      case 'waytoheal':\n      case 'showpokemons':\n      case 'autoheal':\n      case 'showiv':\n      case 'controlhp':\n      case 'controlexp':\n      case 'autocatch':\n      case 'autocatchsettings':\n      case 'alarmsrc':\n      case 'alarmvolume':\n      case 'alarmswitch':\n        newSettings[newPartOfSettings.parameter] = newPartOfSettings.value;\n        if(newPartOfSettings.parameter == 'showpokemons') this.imageReplacer.switchOn(newSettings.showpokemons);\n        if(newPartOfSettings.parameter == 'showiv') this.catcherHeart.setObserverIV(newSettings.showiv);\n        if(newPartOfSettings.parameter == 'alarmvolume') this.alarm.changeVolume(newSettings.alarmvolume);\n        if(newPartOfSettings.parameter == 'alarmsrc') this.alarm.changeMelody(newSettings.alarmsrc);\n      break;\n      case 'attack':\n        let attackNumber = newPartOfSettings.number;\n        newSettings.attack[attackNumber] = newPartOfSettings.value ? 1 : 0;\n      break;\n    }\n\n    let oldAutofightStatus = this.settings.autofight;\n    this.settings = {...newSettings};\n    this.killerHeart.setSettings(this.settings);\n    this.commonHeart.setSettings(this.settings);\n    this.healerHeart.setSettings(this.settings);\n    this.catcherHeart.setSettings(this.settings);\n    this.travellerHeart.setSettings(this.settings);\n    this.travellerTentacle.setSettings(this.settings);\n\n    this.saveSettings();\n    if(this.settings.autofight != oldAutofightStatus) this.startKillerLife();\n  }\n\n  updateViews(settings) {\n    let attackCheckboxes = document.querySelectorAll('[data-changeaction=attack] > input');\n    attackCheckboxes.forEach((checkbox, index) => {\n      checkbox.checked = !!settings.attack[index];\n    });\n\n    let parametres = this.settingsParametres;\n    let settingsInput;\n    parametres.forEach(parameter => {\n      switch(parameter) {\n        case 'forbiddennumbers':\n        case 'waytoheal':\n        case 'autocatchsettings':\n          settingsInput = document.querySelector(`[data-changeaction=${parameter}] > textarea`);\n          settingsInput.value = settings[parameter];\n        break;\n        case 'showpokemons':\n        case 'autoheal':\n        case 'showiv':\n        case 'autocatch':\n        case 'alarmswitch':\n          settingsInput = document.querySelector(`[data-changeaction=${parameter}] > input`);\n          settingsInput.checked = settings[parameter];\n        break;\n        case 'controlhp':\n        case 'controlexp':\n        case 'alarmsrc':\n        case 'alarmvolume':\n          settingsInput = document.querySelector(`[data-changeaction=${parameter}] > input`);\n          settingsInput.value = settings[parameter];\n        break;\n      }\n    });\n  }\n\n  saveSettings() {\n    let settingsToSave = JSON.stringify(this.getSettingsToSave());\n    window.localStorage.setItem('killerSettings', settingsToSave);\n  }\n\n  loadSettings() {\n    let loadedSettings = window.localStorage.getItem('killerSettings');\n    if(!loadedSettings) return;\n    loadedSettings = JSON.parse(loadedSettings);\n    let parametres = this.settingsParametres;\n    parametres.forEach(parameter => {\n      let value = loadedSettings[parameter] && loadedSettings[parameter] != 'undefined' ? loadedSettings[parameter] : '';\n      this.changeSettings({parameter: parameter, value: value});\n    });\n    this.settings.attack = loadedSettings.attack;\n  }\n\n  getSettingsToSave() {\n    let parametres = this.settingsParametres;\n    let settingsToSave = {\n      'attack': this.settings.attack\n    }\n    parametres.forEach(parameter => {\n      settingsToSave[parameter] = this.settings[parameter];\n    });\n    return settingsToSave;\n  }\n\n  sendRequest(url, params=[]) {\n    let formData = new FormData();\n    formData.append('t_key', this.settings.globalVars.t_key);\n    params.forEach(param => {\n      formData.append(param.key, param.value);\n    });\n    let options = {\n      method: 'POST',\n      body: formData,\n      credentials: 'include'\n    }\n    //'http://game.league17.ru/do/pokes/load/team'\n    return fetch(url, options)\n    .then(_ => _.json());\n  }\n}\n\nexport default Killer;","require(`./styles/styles.css`);\n\nimport App from './App';\n\nlet app = new App();\n","module.exports = __webpack_public_path__ + \"dist/app/css/styles.css\";"],"sourceRoot":""}